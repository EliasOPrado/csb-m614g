{"version":3,"sources":["Form.js","List.js","App.js","index.js"],"names":["Form","addValue","useState","firstName","lastName","email","value","setValue","handleChange","e","prevState","target","name","console","log","onSubmit","preventDefault","type","placeholder","onChange","List","list","App","output","setOutput","className","newValue","map","index","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iMAGe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAA0BC,mBAAS,CACjCC,UAAW,GACXC,SAAU,GACVC,MAAO,KAHT,mBAAOC,EAAP,KAAcC,EAAd,KAgBMC,EAAe,SAACC,GAEpBF,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,kBAEND,EAAEE,OAAOC,KAAOH,EAAEE,OAAOL,YAI9B,OADAO,QAAQC,IAAIR,GAEV,uBAAMS,SAnBa,SAACN,GACpBA,EAAEO,iBAEGV,IAELL,EAASK,GAETC,EAAS,CAAEJ,UAAW,GAAIC,SAAU,GAAIC,MAAO,OAY/C,UACE,uBACEY,KAAK,OACLX,MAAOA,EAAMH,UACbS,KAAK,YACLM,YAAY,kBACZC,SAAUX,IAEZ,uBACES,KAAK,OACLX,MAAOA,EAAMF,SACbQ,KAAK,WACLM,YAAY,iBACZC,SAAUX,IAEZ,uBACES,KAAK,QACLX,MAAOA,EAAMD,MACbO,KAAK,QACLM,YAAY,aACZC,SAAUX,IAEZ,8BACE,iDCpDO,SAASY,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,gCACE,8BAAMA,EAAKf,MAAMH,YACjB,8BAAMkB,EAAKf,MAAMF,WACjB,8BAAMiB,EAAKf,MAAMD,WCAR,SAASiB,IACtB,MAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAQA,OADAX,QAAQC,IAAI,SAAUS,GAEpB,sBAAKE,UAAU,MAAf,UACE,sCACA,cAACzB,EAAD,CAAMC,SATO,SAACK,GAEhB,IAAMoB,EAAQ,sBAAOH,GAAP,CAAe,CAAEjB,WAC/BkB,EAAUE,MAOR,8BACGH,EAAOI,KAAI,SAACN,EAAMO,GAAP,OACV,cAACR,EAAD,CAAkBQ,MAAOA,EAAOP,KAAMA,GAA3BO,WCfrB,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACX,EAAD,MAEFO,K","file":"static/js/main.ab0c0907.chunk.js","sourcesContent":["import { useState } from \"react\";\n\n// addValue will come as a prop\nexport default function Form({ addValue }) {\n  const [value, setValue] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if not name return nothing\n    if (!value) return;\n    // get the value as a prop\n    addValue(value);\n    // empty fields\n    setValue({ firstName: \"\", lastName: \"\", email: \"\" });\n  };\n\n  const handleChange = (e) => {\n    // add name and value from input to state\n    setValue((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  console.log(value);\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={value.firstName}\n        name=\"firstName\"\n        placeholder=\"Your first name\"\n        onChange={handleChange}\n      />\n      <input\n        type=\"text\"\n        value={value.lastName}\n        name=\"lastName\"\n        placeholder=\"Your last name\"\n        onChange={handleChange}\n      />\n      <input\n        type=\"email\"\n        value={value.email}\n        name=\"email\"\n        placeholder=\"Your email\"\n        onChange={handleChange}\n      />\n      <div>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n}\n","export default function List({ list }) {\n  return (\n    <div>\n      <div>{list.value.firstName}</div>\n      <div>{list.value.lastName}</div>\n      <div>{list.value.email}</div>\n    </div>\n  );\n}\n","import \"./styles.css\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [output, setOutput] = useState([]);\n\n  const addValue = (value) => {\n    // will add a value to the object {v},{v}...\n    const newValue = [...output, { value }];\n    setOutput(newValue);\n  };\n  console.log(\"output\", output);\n  return (\n    <div className=\"App\">\n      <h1>Form</h1>\n      <Form addValue={addValue} />\n      <div>\n        {output.map((list, index) => (\n          <List key={index} index={index} list={list} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}